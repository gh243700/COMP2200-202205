#include "color.h"
#include "stdio.h"
#include "pomoku.h"
#include <assert.h>

int main(void)
{
    int result;
    init_game();
    
    assert(is_placeable(0 , 15) == 0);
    assert(is_placeable(15 , 0) == 0);
    assert(is_placeable(-1 , 0) == 0);
    assert(is_placeable(0 , -1) == 0);
    
    
    
    
    assert(is_placeable(0 , 1) == 1);
    assert(is_placeable(1 , 2) == 1);
    assert(is_placeable(2 , 3) == 1);
    assert(is_placeable(3 , 4) == 1);
    
    
    assert(place_stone(COLOR_BLACK, 3 , 4) == 1);
    assert(place_stone(COLOR_BLACK, 1 , 2) == 1);
    assert(place_stone(COLOR_BLACK, 2 , 3) == 1);
    
    assert(get_score(COLOR_BLACK) == 0);
    
    assert(place_stone(COLOR_BLACK, 4 , 5) == 1);
    
    assert(place_stone(COLOR_BLACK, 0 , 1) == 1);
    assert(get_score(COLOR_BLACK) == 1);
    
    
    
    assert(is_placeable(0 , 5) == 1);
    assert(is_placeable(1 , 4) == 1);
    assert(is_placeable(3 , 2) == 1);
    assert(is_placeable(4 , 1) == 1);
    
    
    assert(place_stone(COLOR_BLACK, 4 , 1) == 1);
    assert(place_stone(COLOR_BLACK, 0 , 5) == 1);
    assert(place_stone(COLOR_BLACK, 1 , 4) == 1);
    assert(place_stone(COLOR_BLACK, 3 , 2) == 1);
    
    assert(get_score(COLOR_BLACK) == 2);
    
    assert(is_placeable(0 , 0) == 1);
    assert(is_placeable(0 , 2) == 1);
    assert(is_placeable(0 , 3) == 1);
    assert(is_placeable(0 , 4) == 1);
    
    
    assert(place_stone(COLOR_BLACK, 0 , 4) == 1);
    assert(place_stone(COLOR_BLACK, 0 , 0) == 1);
    assert(place_stone(COLOR_BLACK, 0 , 3) == 1);
    assert(place_stone(COLOR_BLACK, 0 , 2) == 1);
    
    assert(get_score(COLOR_BLACK) == 4);
    
    
    assert(is_placeable(1 , 0) == 1);
    assert(is_placeable(2 , 0) == 1);
    assert(is_placeable(3 , 0) == 1);
    assert(is_placeable(4 , 0) == 1);
    
    
    assert(place_stone(COLOR_BLACK, 4 , 0) == 1);
    assert(place_stone(COLOR_BLACK, 3 , 0) == 1);
    assert(place_stone(COLOR_BLACK, 2 , 0) == 1);
    assert(place_stone(COLOR_BLACK, 1 , 0) == 1);
    
    assert(get_score(COLOR_BLACK) == 5);
    
    
    
    print_full_board();
    
    
    printf("\n----------------testfin-----------\n");
    return 0;
}
